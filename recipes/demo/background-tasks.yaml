recipes:
  - name: "background-tasks"
    description: "A simple demo showing the background execution of concurrent tasks"
    category: "demo"
    help: |
      This recipe demonstrates how to run multiple tasks concurrently and monitor their status.

      The recipe:
        1. Starts three background tasks with different execution durations
        2. Monitors all tasks simultaneously with a status loop
        3. Displays completion status and final output when all tasks are finished

      Background task features demonstrated:
        - execution_mode: "background"  # Runs tasks asynchronously
        - bgTaskComplete function       # Checks if a task has completed
        - bgTaskStatus function         # Returns the current status of a task
        - Accessing task output         # Access output after completion

      This demo showcases:
        - How to launch multiple operations concurrently without blocking
        - How to monitor the status of background tasks
        - How to create a waiting loop that checks for task completion
        - How to access output from completed background tasks
        - Real-time inline status updates using progress_mode: true
    operations:
      - name: "Choose Fruit"
        id: "fruit_choice"
        command: echo {{ .fruit }}
        silent: true
        prompts:
          - name: "Fruit Select"
            id: "fruit"
            type: "multiselect"
            message: "Choose one or more fruits:"
            options:
              - "Apple"
              - "Orange"
              - "Lemon"
              - "Kiwi"
            descriptions:
              "Apple": "Run the Apple Task üçé"
              "Orange": "Run the Orange Task üçä"
              "Lemon": "Run the Lemon Task üçã"
              "Kiwi": "Run the Kiwi Task ü•ù"

      - name: "Apple Operation"
        id: "apple"
        command: sleep 5 && echo "The apple task finished! üçé"
        silent: true
        condition: '{{ contains .fruit_choice "Apple" }}'
        execution_mode: "background"

      - name: "Orange Operation"
        id: "orange"
        command: sleep 2 && echo "The orange task finished! üçä"
        silent: true
        condition: '{{ contains .fruit_choice "Orange" }}'
        execution_mode: "background"

      - name: "Lemon Operation"
        id: "lemon"
        command: sleep 7 && echo "The lemon task finished! üçã"
        silent: true
        condition: '{{ contains .fruit_choice "Lemon" }}'
        execution_mode: "background"

      - name: "Kiwi Operation"
        id: "kiwi"
        command: sleep 4 && echo "The kiwi task finished! ü•ù"
        silent: true
        condition: '{{ contains .fruit_choice "Kiwi" }}'
        execution_mode: "background"

      - name: "Wait Loop"
        control_flow:
          type: "while"
          condition: .allTasksComplete != "true"
          progress_mode: true
        operations:
          - name: "Delay"
            command: sleep 0.05

          - name: "Fruit Status"
            control_flow:
              type: "foreach"
              collection: "apple\norange\nlemon\nkiwi"
              as: "fruit"
            operations:
              - name: "{{ .fruit }} Status"
                id: "{{ .fruit }}_status"
                command: echo "[{{ taskStatusMessage .fruit (color "green" (printf "‚úÖ %s" .fruit)) (color "yellow" (printf "%s" .fruit)) "" (style "dim" (printf "%s" .fruit)) }}]"
                silent: true

          - name: "Status Update"
            command: echo {{ printf "%s %s %s %s '(%s)'" .apple_status .orange_status .lemon_status .kiwi_status (color "magenta" .duration_ms_fmt) }}

      - name: "Success"
        command: echo {{ color "green" "All background tasks are complete!" }}
