recipes:
  - name: "monitor"
    description: "Monitor a service until it returns a success status code"
    category: "demo"
    help: |
      This recipe demonstrates how to monitor a service until it returns a success status code.

      The recipe simulates:
        1. Checking a service's health status
        2. Displaying error messages while the service is unavailable
        3. Retrying until the service returns a success status code (200)
        4. Displaying a success message when the service is available

      This demonstrates:
        - While loop control flow for continuous monitoring
        - Conditional operations based on status
        - Throttling requests with sleep
        - Formatting output with colors and styles

      Note: For demonstration purposes, the service automatically succeeds after 3 polling attempts.
    operations:
      - name: "Initialize Empty Status Code"
        id: "status_code"
        command: echo ""
        silent: true

      - name: "Health Check"
        control_flow:
          type: "while"
          condition: .status_code != "200" || .status_code == ""
        operations:
          - name: "Check Service Status"
            id: "status_code"
            command: |
              # simulate a status change after three polling attempts
              if [ {{ .iteration }} -gt 3 ]; then
                curl -s -o /dev/null -w "%{http_code}" https://httpbin.org/status/200
              else
                curl -s -o /dev/null -w "%{http_code}" https://httpbin.org/status/500
              fi
            silent: true

          - name: "Display Current Error Status"
            command: echo {{ color "red" "Service unavailable! Status code:" }} {{ style "bold" (color "red" .status_code) }}
            condition: .status_code != "200"

          - name: "Throttle"
            command: sleep 1
            silent: true
            condition: .status_code != "200"

      - name: "Success Message"
        command: echo {{ color "green" "Service available! Status code:" }} {{ style "bold" (color "green" .status_code) }}
