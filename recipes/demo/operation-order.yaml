recipes:
  - name: "operation-order"
    description: "A simple demo to show the order of operations in a recipe"
    category: "demo"
    help: |
      This recipe demonstrates the order in which operations execute in a Shef recipe.

      Operation execution follows this order:
        1. Check condition (skip if not met)
        2. Run prompts to collect user input
        3. Execute control flow if it exists
        4. Run the command
        5. Apply transformations to the output
        6. Execute on_success/on_failure handlers

      This recipe shows:
        - Complex operation structure
        - How prompts collect user input
        - How for loops work with a break condition
        - How transformations modify output
        - How success handlers chain operations
    operations:
      - name: "Hello"
        command: echo "Executing command [old text] {{ .item }}"
        condition: .f == "true"
        transform: '{{ replace .output "old" "new" }}'
        on_success: "success_op"
        prompts:
          - name: "Item Select"
            id: "item"
            type: "select"
            message: "Choose an option:"
            options:
              - "Item 1"
              - "Item 2"
        control_flow:
          type: "for"
          count: 10
          variable: "i"
        operations:
          - name: "Control Flow Operations"
            command: echo "Iteration " {{ .i }}

          - name: "Control Flow Exit"
            command: echo "Exiting for loop control flow!"
            condition: .i == 5
            break: true

      - name: "Success"
        id: "success_op"
        command: echo "Success operation!"
