recipes:
  - name: "secret"
    description: "Fetch a GCP secret and copy its value to the clipboard"
    category: "gcp"
    help: |
      This recipe fetches a Google Cloud Platform (GCP) secret and copies its value to the clipboard.

      The recipe will:
        1. List all available secrets in your GCP project
        2. Prompt you to select a secret
        3. Fetch the latest version of the selected secret
        4. Copy the secret value to your clipboard

      Requirements:
        - Google Cloud SDK (gcloud) must be installed
        - You must be authenticated with gcloud
        - You must have permissions to access secrets
        - A clipboard utility must be available (pbcopy, xclip, xsel, or clip)

      Note: The recipe will detect your operating system and use the appropriate
      clipboard command. If no clipboard utility is available, it will notify you.
    operations:
      - name: "List GCP Secrets"
        id: "list_secrets"
        command: gcloud secrets list --format="value(name)"
        silent: true

      - name: "Select Secret"
        id: "selected_secret"
        command: echo {{ .secret_name }}
        silent: true
        prompts:
          - name: "Secret Select"
            id: "secret_name"
            type: "select"
            message: "Select a secret to access"
            source_operation: "list_secrets"

      - name: "Fetch Secret Value"
        id: "secret_value"
        command: gcloud secrets versions access latest --secret={{ .selected_secret }}
        transform: "{{ .output | trim }}"
        silent: true

      - name: "Determine Clipboard Command"
        id: "clipboard_cmd"
        command: |
          if [[ "$OSTYPE" == "darwin"* && -x "$(command -v pbcopy)" ]]; then
            echo "pbcopy"
          elif [[ "$OSTYPE" == "linux-gnu"* && -x "$(command -v xclip)" ]]; then
            echo "xclip -selection clipboard"
          elif [[ "$OSTYPE" == "linux-gnu"* && -x "$(command -v xsel)" ]]; then
            echo "xsel --clipboard"
          elif [[ ("$OSTYPE" == "msys" || "$OSTYPE" == "win32") && -x "$(command -v clip)" ]]; then
            echo "clip"
          else
            echo "none"
          fi
        silent: true

      - name: "Copy to Clipboard"
        command: printf "%s" {{ .secret_value }} | {{ .clipboard_cmd }}
        condition: .clipboard_cmd != "none"

      - name: "Clipboard Success Message"
        command: echo {{ color "green" "Secret copied to the clipboard!" }}
        condition: .clipboard_cmd != "none"

      - name: "No Clipboard Available"
        command: echo {{ color "red" "Unable to copy secret to the clipboard, no clipboard utility available." }}
        condition: .clipboard_cmd == "none"
