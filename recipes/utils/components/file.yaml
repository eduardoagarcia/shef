components:
  - id: "file.exists"
    input:
      - id: "file"
        required: true
    operations:
      - command: '[ -f {{ .file }} ] && echo "true" || echo "false"'
        output_format: "trim"

  - id: "file.read"
    inputs:
      - id: "file"
        required: true
    operations:
      - uses: "file.exists"
        id: "file_exists"
        with:
          file: "{{ .file }}"
        silent: true

      - command: cat "{{ .file }}"
        output_format: "trim"
        condition: .file_exists == "true"

  - id: "file.write"
    inputs:
      - id: "file"
        required: true
      - id: "contents"
        required: true
    operations:
      - command: |
          cat > {{ .file }} << 'EOF'
          {{ .contents }}
          EOF

  - id: "file.create"
    inputs:
      - id: "file"
        required: true
    operations:
      - uses: "file.exists"
        id: "file_exists"
        with:
          file: "{{ .file }}"
        silent: true

      - command: touch {{ .file }}
        condition: .file_exists != "true"

  - id: "file.delete"
    inputs:
      - id: "file"
        required: true
    operations:
      - uses: "file.exists"
        id: "file_exists"
        with:
          file: "{{ .file }}"
        silent: true

      - command: rm "{{ .file }}"
        condition: .file_exists == "true"

  - id: "file.empty"
    inputs:
      - id: "file"
        required: true
    operations:
      - command: "> {{ .file }}"

  - id: "file.rename"
    input:
      - id: "old"
        required: true
      - id: "new"
        required: true
    operations:
      - uses: "file.exists"
        id: "file_exists"
        with:
          file: "{{ .old }}"
        silent: true

      - command: mv {{ .old }} {{ .new }}
        condition: .file_exists == "true"

  - id: "file.backup"
    input:
      - id: "file"
        required: true
    operations:
      - uses: "file.exists"
        id: "file_exists"
        with:
          file: "{{ .file }}"
        silent: true

      - uses: "file.filename"
        id: "filename"
        silent: true

      - uses: "file.extension"
        id: "extension"
        silent: true

      - uses: "file.path"
        id: "path"
        silent: true

      - id: "backup_filename"
        command: echo "{{ .path }}/{{ .filename }}_bak_$(date +%Y%m%d_%H%M%S).{{ .extension }}"
        silent: true

      - command: cp {{ .file }} {{ .backup_filename }}
        condition: .file_exists == "true"

      - command: echo "{{ .backup_filename }}"

  - id: "file.filename"
    input:
      - id: "file"
        required: true
    operations:
      - uses: "file.exists"
        id: "file_exists"
        with:
          file: "{{ .file }}"
        silent: true

      - command: echo "$(basename {{ .file }} | sed 's/\.[^.]*$//')"
        condition: .file_exists == "true"
        output_format: "trim"

  - id: "file.extension"
    input:
      - id: "file"
        required: true
    operations:
      - uses: "file.exists"
        id: "file_exists"
        with:
          file: "{{ .file }}"
        silent: true

      - command: |
          filepath="{{ .file }}"
          echo "${filepath##*.}"
        condition: .file_exists == "true"
        output_format: "trim"

  - id: "file.path"
    input:
      - id: "file"
        required: true
    operations:
      - uses: "file.exists"
        id: "file_exists"
        with:
          file: "{{ .file }}"
        silent: true

      - command: echo $(dirname "{{ .file }}")
        condition: .file_exists == "true"
        output_format: "trim"

  - id: "dir.exists"
    input:
      - id: "dir"
        required: true
    operations:
      - command: '[ -d "{{ .dir }}" ] && echo "true" || echo "false"'

  - id: "dir.create"
    input:
      - id: "dir"
        required: true
    operations:
      - command: mkdir -p {{ .dir }}

  - id: "dir.delete"
    input:
      - id: "dir"
        required: true
      - id: "force"
        default: false
    operations:
      - uses: "dir.exists"
        id: "dir_exists"
        with:
          dir: "{{ .dir }}"
        silent: true

      - command: rmdir {{ .dir }}
        condition: .dir_exists == "true" && .force == "false"

      - command: rm -rf {{ .dir }}
        condition: .dir_exists == "true" && .force == "true"

      - id: "force"
        description: "!! critical to reset force to false for future usage !!"
        command: echo "false"
        silent: true

  - id: "dir.rename"
    input:
      - id: "old"
        required: true
      - id: "new"
        required: true
    operations:
      - uses: "dir.exists"
        id: "dir_exists"
        with:
          dir: "{{ .old }}"
        silent: true

      - command: mv {{ .old }} {{ .new }}
        condition: .dir_exists == "true"

  - id: "dir.sync"
    input:
      - id: "src"
        required: true
      - id: "dst"
        required: true
    operations:
      - uses: "dir.exists"
        id: "dir_exists"
        with:
          dir: "{{ .src }}"
        silent: true

      - command: |
          src="{{ .src }}"
          dst="{{ .dst }}"
          rsync -a --delete "${src%/}/" "${dst%/}/"
        condition: .dir_exists == "true"
